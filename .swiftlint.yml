# SwiftLint Configuration for FortDocs
# This configuration ensures consistent code style and quality

# Paths to include in linting
included:
  - FortDocs

# Paths to exclude from linting
excluded:
  - Carthage
  - Pods
  - .build
  - DerivedData
  - fastlane
  - .git

# Disable rules
disabled_rules:
  - trailing_whitespace # Handled by editor
  - todo # TODOs are acceptable during development

# Opt-in rules (not enabled by default)
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - discouraged_object_literal
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - flatmap_over_map_reduce
  - identical_operands
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - single_test_class
  - sorted_first_last
  - static_operator
  - strong_iboutlet
  - toggle_bool
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - untyped_error_in_catch
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# Rule configurations
line_length:
  warning: 120
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

function_body_length:
  warning: 50
  error: 100

function_parameter_count:
  warning: 6
  error: 8

type_body_length:
  warning: 300
  error: 400

file_length:
  warning: 500
  error: 1000
  ignore_comment_only_lines: true

cyclomatic_complexity:
  warning: 10
  error: 20

nesting:
  type_level:
    warning: 3
    error: 6
  statement_level:
    warning: 5
    error: 10

identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - URL
    - url
    - x
    - y
    - z

type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50

large_tuple:
  warning: 3
  error: 4

# Custom rules
custom_rules:
  # Ensure proper spacing around operators
  operator_whitespace:
    name: "Operator Whitespace"
    regex: '(?:\S)[\+\-\*\/\%\=\<\>\!\&\|\^](?:\S)'
    message: "Operators should be surrounded by whitespace"
    severity: warning

  # Discourage force unwrapping in production code
  force_unwrapping:
    name: "Force Unwrapping"
    regex: '(?<!\/\/.*)\!\s*(?!\/\/)'
    message: "Avoid force unwrapping. Use optional binding or guard statements instead."
    severity: warning
    excluded: ".*Tests.*" # Allow in test files

  # Ensure proper documentation for public APIs
  missing_docs:
    name: "Missing Documentation"
    regex: '^(?!.*\/\/\/).*(?:public|open)\s+(?:class|struct|enum|protocol|func|var|let)'
    message: "Public declarations should be documented"
    severity: warning

  # Discourage print statements in production code
  print_statement:
    name: "Print Statement"
    regex: '\bprint\s*\('
    message: "Use proper logging instead of print statements"
    severity: warning
    excluded: ".*Tests.*" # Allow in test files

  # Ensure consistent naming for test methods
  test_method_naming:
    name: "Test Method Naming"
    regex: '^(?!.*func test[A-Z]).*func test'
    message: "Test methods should start with 'test' followed by a capital letter"
    severity: warning
    included: ".*Tests.*"

  # Discourage TODO comments in production code
  todo_comment:
    name: "TODO Comment"
    regex: '(?i)\/\/\s*TODO'
    message: "TODO comments should be resolved before production"
    severity: warning
    excluded: ".*Tests.*"

  # Ensure proper error handling
  empty_catch:
    name: "Empty Catch Block"
    regex: 'catch\s*\{\s*\}'
    message: "Empty catch blocks should handle errors appropriately"
    severity: error

  # Discourage magic numbers
  magic_number:
    name: "Magic Number"
    regex: '(?<!\w)(?:0x)?[0-9]{2,}(?!\w)'
    message: "Consider using named constants instead of magic numbers"
    severity: warning
    excluded: ".*Tests.*"

# File header template
file_header:
  required_pattern: |
                    \/\/
                    \/\/  .*\.swift
                    \/\/  FortDocs
                    \/\/
                    \/\/  Created by .* on \d{1,2}\/\d{1,2}\/\d{2}\.
                    \/\/

# Reporter type
reporter: "xcode" # Available: xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown

# Severity levels
warning_threshold: 10
error_threshold: 5

# Analyzer rules (require full compilation)
analyzer_rules:
  - explicit_self
  - unused_import
  - unused_declaration

